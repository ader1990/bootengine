#!/bin/sh -e
# -*- mode: shell-script; indent-tabs-mode: nil; sh-basic-offset: 4; -*-
# ex: ts=8 sw=4 sts=4 et filetype=sh

# Safe to run also after an official first boot and we do this now
# for consistency regardless if first_boot= is passed to create missing
# files if needed and make it easier to debug. In fact, it was required
# to use first_boot=1 with PXE to get a proper rootfs which is strange.

# /etc/machine-id after a new image is created:
COREOS_BLANK_MACHINE_ID="42000000000000000000000000000042"
MACHINE_ID_FILE="/sysroot/etc/machine-id"

# This creates the modifiable users/groups in /sysroot/etc,
# initializing the shadow database in the process. This needs to
# happen early, so systemd-tmpfiles can read the user info from
# /sysroot.
/usr/sbin/flatcar-tmpfiles /sysroot

# Initialize base filesystem
systemd-tmpfiles --root=/sysroot --create \
    baselayout.conf baselayout-etc.conf baselayout-usr.conf \
    baselayout-home.conf etc.conf etc-shadow.conf

# Not all images provide these files so check before using them.
# Note: selinux-base.conf must run before libsemanage.conf
for config in baselayout-ldso.conf selinux-base.conf libsemanage.conf; do
    if [ -e "/sysroot/usr/lib/tmpfiles.d/${config}" ]; then
        systemd-tmpfiles --root=/sysroot --create "${config}"
    fi
done

# Remove our phony id. systemd will initialize this during boot.
if grep -qs "${COREOS_BLANK_MACHINE_ID}" "${MACHINE_ID_FILE}"; then
    rm "${MACHINE_ID_FILE}"
fi

# PXE initrds may provide OEM
if [ -d /usr/share/oem ] && mountpoint --quiet /sysroot/usr/share/oem; then
    cp -Ra /usr/share/oem/. /sysroot/usr/share/oem
fi
